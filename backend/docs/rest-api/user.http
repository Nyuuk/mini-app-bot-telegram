### User API Endpoints

# Base URL: http://localhost:3000

### 1. Get User by ID
GET {{baseUrl}}/v1/user/1
Content-Type: application/json
Authorization: Bearer {{token}}

# Expected Response (200 OK):
# {
#   "status": 200,
#   "message": "User retrieved successfully",
#   "data": {
#     "id": 1,
#     "username": "john_doe",
#     "password_hash": "hashed_password_string",
#     "email": "john@example.com",
#     "created_at": "2024-01-01T00:00:00Z",
#     "updated_at": "2024-01-01T00:00:00Z"
#   }
# }

# Error Response (400 Bad Request):
# {
#   "status": 400,
#   "message": "ID is required",
#   "data": null
# }

# Error Response (404 Not Found):
# {
#   "status": 404,
#   "message": "User not found",
#   "data": null
# }

### login
# @name login
POST {{baseUrl}}/v1/auth/login
Content-Type: application/json

{
  "username": "nyuuk",
  "password": "hello_world"
}


### Get Detail Me
GET {{baseUrl}}/v1/user/detail-me
Content-Type: application/json
# Authorization: Bearer {{token}}
X-API-Key: {{tokenapikey}}



### Create User
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "nyuuk",
  "email": "adnan@nyuuk.my.id",
  "password": "hello_world"
}

## 3. Create User - Invalid Data Examples

### Missing required fields
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "",
  "email": "invalid-email",
  "password": "123"
}


### Username too short
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "ab",
  "email": "test@example.com",
  "password": "password123"
}

### Username too long
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "very_long_username_that_exceeds_twenty_characters",
  "email": "test@example.com",
  "password": "password123"
}

### Invalid email format
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "testuser",
  "email": "not-an-email",
  "password": "password123"
}

### Password too short
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "123"
}


### Create API Key
POST {{baseUrl}}/v1/user/api-key
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "description": "API key for testing",
  "is_active": true,
  "expired_at": "2025-08-26T05:00:00Z"
}
### Environment Variables
@baseUrl = http://localhost:3000
@token = {{login.response.body.data.token}}
# @token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVfYXQiOjE3NTYxNDE4NzksInVzZXJfaWQiOiIzIiwiaWF0IjoxNzU2MTQxNzk2fQ.BJK4nlvCdh46cEcMb3Xkp05JWvPHKHxBEPz07MUC_VQ
@tokenapikey = afa605f2690af6c45066405b7f604f643d3ffcec8485e404bf498626de502a50