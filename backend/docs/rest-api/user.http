### 1. Get All Users
GET {{baseUrl}}/v1/user
Content-Type: application/json
# Authorization: Bearer {{token}}
X-API-Key: {{tokenapikey}}


### 2. Delete User by ID
DELETE {{baseUrl}}/v1/user/3
Content-Type: application/json
# Authorization: Bearer {{token}}
X-API-Key: {{tokenapikey}}


### 1. Get User by ID
GET {{baseUrl}}/v1/user/3
Content-Type: application/json
# Authorization: Bearer {{token}}
X-API-Key: {{tokenapikey}}


### login
# @name login
POST {{baseUrl}}/v1/auth/login
Content-Type: application/json

{
  "username": "nyuuk",
  "password": "hello_world"
}


### Get Detail Me
GET {{baseUrl}}/v1/user/detail-me
Content-Type: application/json
# Authorization: Bearer {{token}}
X-API-Key: {{tokenapikey}}


### Create User
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "nyuuk",
  "email": "adnan@nyuuk.my.id",
  "password": "hello_world"
}


### Missing required fields
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "",
  "email": "invalid-email",
  "password": "123"
}


### Username too short
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "ab",
  "email": "test@example.com",
  "password": "password123"
}

### Username too long
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "very_long_username_that_exceeds_twenty_characters",
  "email": "test@example.com",
  "password": "password123"
}

### Invalid email format
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "testuser",
  "email": "not-an-email",
  "password": "password123"
}

### Password too short
POST {{baseUrl}}/v1/user/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "123"
}


### Create API Key
POST {{baseUrl}}/v1/user/api-key
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "description": "API key for testing",
  "is_active": true,
  "expired_at": "2025-08-26T05:00:00Z"
}

### Get API Key from User Active
GET {{baseUrl}}/v1/user/api-key
Content-Type: application/json
# Authorization: Bearer {{token}}
X-API-Key: {{tokenapikey}}

### Environment Variables
@baseUrl = http://localhost:3000
@token = {{login.response.body.data.token}}
# @token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVfYXQiOjE3NTYxNDE4NzksInVzZXJfaWQiOiIzIiwiaWF0IjoxNzU2MTQxNzk2fQ.BJK4nlvCdh46cEcMb3Xkp05JWvPHKHxBEPz07MUC_VQ
# @tokenapikey = afa605f2690af6c45066405b7f604f643d3ffcec8485e404bf498626de502a50
@tokenapikey = $2a$10$DNRE.BxH/C5gZpmm/DOZfey1JJSSnbHUlZbOtPZW3eqcozYort6eO